
# ********************************
# Transmitter targets
# ********************************

[env:DIY_2400_TX_ESP32_SX1280_Mini_via_UART]
extends = env_common_esp32, radio_2400
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	${radio_2400.build_flags}
	-include target/DIY_2400_TX_ESP32_SX1280_Mini.h
	-D VTABLES_IN_FLASH=1
	-O2
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>

[env:DIY_2400_TX_ESP32_SX1280_E28_via_UART]
extends = env_common_esp32, radio_2400
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	${radio_2400.build_flags}
	-include target/DIY_2400_TX_ESP32_SX1280_E28.h
	-D VTABLES_IN_FLASH=1
	-O2
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>
lib_deps = 
	${env_common_esp32.lib_deps}
	olikraus/U8g2@^2.28.8

[env:DIY_2400_TX_ESP32_SX1280_E28_via_WIFI]
extends = env:DIY_2400_TX_ESP32_SX1280_E28_via_UART

[env:DIY_2400_TX_ESP32_SX1280_LORA1280F27_via_UART]
extends = env_common_esp32, radio_2400
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	${radio_2400.build_flags}
	-include target/DIY_2400_TX_ESP32_SX1280_LORA1280F27.h
	-D VTABLES_IN_FLASH=1
	-O2
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>
lib_deps = 
	${env_common_esp32.lib_deps}
	olikraus/U8g2@^2.28.8

[env:DIY_2400_TX_ESP8285_SX1280_via_UART]
# Status: These TXes work as free-running transmitters, but do not have working halfduplex inverted UART
# to let them work in handsets so if someone could fix that for CapnBry, he'd love you with mouth
extends = env_common_esp82xx, radio_2400
build_flags =
	${env_common_esp82xx.build_flags}
	${common_env_data.build_flags_tx}
	${radio_2400.build_flags}
	-include target/DIY_2400_TX_ESP8285_SX1280.h
src_filter = ${env_common_esp82xx.src_filter} -<rx_*.cpp>
upload_speed = 921600

# ********************************
# Receiver targets
# ********************************

[env:DIY_2400_RX_ESP8285_SX1280_via_UART]
extends = env_common_esp82xx, radio_2400
build_flags =
	${env_common_esp82xx.build_flags}
	${common_env_data.build_flags_rx}
	${radio_2400.build_flags}
	-include target/DIY_2400_RX_ESP8285_SX1280.h
src_filter = ${env_common_esp82xx.src_filter} -<tx_*.cpp>

[env:DIY_2400_RX_ESP8285_SX1280_via_BetaflightPassthrough]
extends = env:DIY_2400_RX_ESP8285_SX1280_via_UART
upload_protocol = custom
upload_speed = 420000
upload_command = ${env_common_esp82xx.bf_upload_command}

[env:DIY_2400_RX_ESP8285_SX1280_via_WIFI]
extends = env:DIY_2400_RX_ESP8285_SX1280_via_UART

[env:DIY_2400_RX_PWMP_via_UART]
extends = env_common_esp82xx
build_flags =
	${env_common_esp82xx.build_flags}
	${common_env_data.build_flags_rx}
	-include target/DIY_2400_RX_PWMP.h
src_filter = ${env_common_esp82xx.src_filter} -<tx_*.cpp>

[env:DIY_2400_RX_PWMP_via_WIFI]
extends = env:DIY_2400_RX_PWMP_via_UART

[env:DIY_2400_RX_STM32_CCG_Nano_v0_5_via_STLINK]
extends = env_common_stm32, radio_2400
platform = ststm32@9.0.0
board = l432kb
# max size = 131072 - 0x4000 = 114688
board_upload.maximum_size = 114688
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_rx}
	${radio_2400.build_flags}
	-include target/DIY_2400_RX_STM32_CCG_Nano_v0_5.h
	-D HAL_RTC_MODULE_DISABLED=1
	-D HAL_ADC_MODULE_DISABLED=1
	-D DISABLE_GENERIC_SERIALUSB=1
	-D HSI_VALUE=16000000U
	-D USE_HSI=1
	-O3
	-D FLASH_BASE_ADDRESS='((uint32_t)((FLASH_SIZE) - FLASH_PAGE_SIZE))'
	-D VECT_TAB_OFFSET=0x4000U
    -D FLASH_APP_OFFSET=0x4000U
    -Wl,--defsym=FLASH_APP_OFFSET=16K
src_filter = ${env_common_stm32.src_filter} -<tx_*.cpp>
upload_flags =
    BOOTLOADER=bootloader/bootloader_sx1280_rx_ccg_nano_v05.bin
    VECT_OFFSET=0x4000

[env:DIY_2400_RX_STM32_CCG_Nano_v0_5_via_BetaflightPassthrough]
extends = env:DIY_2400_RX_STM32_CCG_Nano_v0_5_via_STLINK
